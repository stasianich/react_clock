{"version":3,"sources":["components/Button/Button.jsx","components/Clock/Clock.jsx","App.js","index.js"],"names":["Button","action","state","type","onClick","Clock","currentTime","Date","toLocaleTimeString","startClock","setState","console","log","this","interval","setInterval","clearInterval","React","Component","App","isClockVisible","currentClockName","changeVisibility","changeClockName","oldName","newName","Math","random","toString","substring","className","clockName","ReactDOM","render","document","getElementById"],"mappings":"uMAGaA,G,MAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,MAAX,OACpB,4BACEC,KAAK,SACLC,QAASH,GAERC,EAAQ,aAAe,gBCLfG,EAAb,4MACEH,MAAQ,CACNI,aAAa,IAAIC,MAAOC,sBAF5B,EAaEC,WAAa,WACX,EAAKC,SACH,CAAEJ,aAAa,IAAIC,MAAOC,uBAG5BG,QAAQC,IAAI,EAAKV,MAAMI,cAlB3B,uDAKE,WACEO,KAAKC,SAAWC,YAAYF,KAAKJ,WAAY,OANjD,kCASE,WACEO,cAAcH,KAAKC,YAVvB,oBAqBE,WACE,OACE,oDAEG,IACAD,KAAKX,MAAMI,iBA1BpB,GAA2BW,IAAMC,WCiDlBC,E,4MA7CbjB,MAAQ,CACNkB,gBAAgB,EAChBC,iBAAkB,c,EAGpBC,iBAAmB,WACjB,EAAKZ,UAAS,SAACU,GAGb,MAAO,CAAEA,gBAFS,EAAKlB,MAAMkB,oB,EAMjCG,gBAAkB,WAChB,IAAMC,EAAU,EAAKtB,MAAMmB,iBACrBI,EAAUC,KAAKC,SAASC,SAAS,IAAIC,UAAU,GAErD,EAAKnB,SAAS,CAAEW,iBAAkBI,IAElCd,QAAQC,IAAR,qCAA0CY,EAA1C,eAAwDC,K,4CAG1D,WACE,OACE,yBAAKK,UAAU,OACb,2CACA,yBAAKA,UAAU,SACZjB,KAAKX,MAAMkB,gBACP,kBAAC,EAAD,CAAOW,UAAWlB,KAAKX,MAAMmB,oBAEpC,kBAAC,EAAD,CACEpB,OAAQY,KAAKS,iBACbpB,MAAOW,KAAKX,MAAMkB,iBAEpB,4BACEjB,KAAK,SACLC,QAASS,KAAKU,iBAFhB,oB,GAnCUN,IAAMC,WCFxBc,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.2c66e1b4.chunk.js","sourcesContent":["import React from 'react';\nimport PropType from 'prop-types';\n\nexport const Button = ({ action, state }) => (\n  <button\n    type=\"button\"\n    onClick={action}\n  >\n    {state ? 'Hide clock' : 'Show clock'}\n  </button>\n);\n\nButton.propTypes = {\n  action: PropType.func.isRequired,\n  state: PropType.bool.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Clock extends React.Component {\n  state = {\n    currentTime: new Date().toLocaleTimeString(),\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(this.startClock, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  startClock = () => {\n    this.setState(\n      { currentTime: new Date().toLocaleTimeString() },\n    );\n    // eslint-disable-next-line\n    console.log(this.state.currentTime);\n  }\n\n  render() {\n    return (\n      <>\n        Current time:\n        {' '}\n        {this.state.currentTime}\n      </>\n    );\n  }\n}\n\nClock.propTypes = {\n  clockName: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './App.scss';\nimport { Button } from './components/Button/Button';\nimport { Clock } from './components/Clock/Clock';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    currentClockName: 'start name',\n  }\n\n  changeVisibility = () => {\n    this.setState((isClockVisible) => {\n      const prevState = this.state.isClockVisible;\n\n      return { isClockVisible: !prevState };\n    });\n  }\n\n  changeClockName = () => {\n    const oldName = this.state.currentClockName;\n    const newName = Math.random().toString(36).substring(7);\n\n    this.setState({ currentClockName: newName });\n    // eslint-disable-next-line\n    console.log(`The Clock was renamed from ${oldName} to ${newName}`);\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <div className=\"clock\">\n          {this.state.isClockVisible\n            && <Clock clockName={this.state.currentClockName} />}\n        </div>\n        <Button\n          action={this.changeVisibility}\n          state={this.state.isClockVisible}\n        />\n        <button\n          type=\"button\"\n          onClick={this.changeClockName}\n        >\n          Change name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}